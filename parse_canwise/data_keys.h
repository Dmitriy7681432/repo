//AUTOGENERATED FILE, DO NOT EDIT

#ifndef __DATA_KEYS_HEADER__
#define __DATA_KEYS_HEADER__

// Агрегат ElectroStation

// Пожар
#define KEY_FIRE ((uint32_t)(1))
// Наработка станции
#define KEY_STATION_MOTOHOURS ((uint32_t)(2))
// Пожар
#define KEY_EA301 ((uint32_t)(301))
// Пожар
#define KEY_LIM_FIRE ((uint32_t)(302))

// Агрегат Bus

// I фазы A
#define KEY_B_I_A ((uint32_t)(1013))
// I фазы B
#define KEY_B_I_B ((uint32_t)(1014))
// I фазы C
#define KEY_B_I_C ((uint32_t)(1015))
// F I фазы A
#define KEY_B_F_I_A ((uint32_t)(1016))
// F I фазы B
#define KEY_B_F_I_B ((uint32_t)(1017))
// F I фазы C
#define KEY_B_F_I_C ((uint32_t)(1018))
// Угол I фазы A
#define KEY_B_PHI_I_A ((uint32_t)(1019))
// Угол I фазы B
#define KEY_B_PHI_I_B ((uint32_t)(1020))
// Угол I фазы C
#define KEY_B_PHI_I_C ((uint32_t)(1021))
// МКИ включен
#define KEY_B_MKI_ON ((uint32_t)(1043))
// Не норма изоляции МКИ
#define KEY_B_MKI_AI ((uint32_t)(1044))
// МКИ
#define KEY_CONT_MKI ((uint32_t)(1051))
// I фазы A2
#define KEY_B_I_A2 ((uint32_t)(1300))
// I фазы A3
#define KEY_B_I_A3 ((uint32_t)(1301))
// I фазы B2
#define KEY_B_I_B2 ((uint32_t)(1302))
// I фазы B3
#define KEY_B_I_B3 ((uint32_t)(1303))
// I фазы C2
#define KEY_B_I_C2 ((uint32_t)(1304))
// I фазы C3
#define KEY_B_I_C3 ((uint32_t)(1305))
// F I фазы A2
#define KEY_B_F_I_A2 ((uint32_t)(1306))
// F I фазы A3
#define KEY_B_F_I_A3 ((uint32_t)(1307))
// F I фазы B2
#define KEY_B_F_I_B2 ((uint32_t)(1308))
// F I фазы B3
#define KEY_B_F_I_B3 ((uint32_t)(1309))
// F I фазы C2
#define KEY_B_F_I_C2 ((uint32_t)(1310))
// F I фазы C3
#define KEY_B_F_I_C3 ((uint32_t)(1311))
// Угол I фазы A2
#define KEY_B_PHI_I_A2 ((uint32_t)(1312))
// Угол I фазы A3
#define KEY_B_PHI_I_A3 ((uint32_t)(1313))
// Угол I фазы B2
#define KEY_B_PHI_I_B2 ((uint32_t)(1314))
// Угол I фазы B3
#define KEY_B_PHI_I_B3 ((uint32_t)(1315))
// Угол I фазы C2
#define KEY_B_PHI_I_C2 ((uint32_t)(1316))
// Угол I фазы C3
#define KEY_B_PHI_I_C3 ((uint32_t)(1317))
// Ток фазы А с вычетом тока ЭНов
#define KEY_B_I_A_NOEN ((uint32_t)(1318))
// Ток фазы B с вычетом тока ЭНов
#define KEY_B_I_B_NOEN ((uint32_t)(1319))
// Ток фазы C с вычетом тока ЭНов
#define KEY_B_I_C_NOEN ((uint32_t)(1320))
// Версия программы
#define KEY_B_VERSION ((uint32_t)(1321))
// Не норма изоляции от МКИ
#define KEY_EA304 ((uint32_t)(1322))
// Неисправность контактора МКИ
#define KEY_EA326 ((uint32_t)(1323))
// Сработало МКИ
#define KEY_LIM_MKI ((uint32_t)(1324))
// Контроль включения контактора МКИ
#define KEY_LIM_WAIT_KMKI_ON ((uint32_t)(1325))
// Контроль отключения контактора МКИ
#define KEY_LIM_WAIT_KMKI_OFF ((uint32_t)(1326))

// Агрегат Net

// U фазы A
#define KEY_N_U_A ((uint32_t)(2001))
// U фазы B
#define KEY_N_U_B ((uint32_t)(2002))
// U фазы C
#define KEY_N_U_C ((uint32_t)(2003))
// U линейное AB
#define KEY_N_U_AB ((uint32_t)(2004))
// U линейное BC
#define KEY_N_U_BC ((uint32_t)(2005))
// U линейное AC
#define KEY_N_U_AC ((uint32_t)(2006))
// F U фазы A
#define KEY_N_F_U_A ((uint32_t)(2007))
// F U фазы B
#define KEY_N_F_U_B ((uint32_t)(2008))
// F U фазы C
#define KEY_N_F_U_C ((uint32_t)(2009))
// Угол U фазы A
#define KEY_N_PHI_U_A ((uint32_t)(2010))
// Угол U фазы B
#define KEY_N_PHI_U_B ((uint32_t)(2011))
// Угол U фазы C
#define KEY_N_PHI_U_C ((uint32_t)(2012))
// I фазы А
#define KEY_N_I_A ((uint32_t)(2013))
// I фазы B
#define KEY_N_I_B ((uint32_t)(2014))
// I фазы C
#define KEY_N_I_C ((uint32_t)(2015))
// Угол I фазы A
#define KEY_N_PHI_I_A ((uint32_t)(2019))
// Угол I фазы B
#define KEY_N_PHI_I_B ((uint32_t)(2020))
// Угол I фазы C
#define KEY_N_PHI_I_C ((uint32_t)(2021))
// Косинус
#define KEY_N_COS_PHI ((uint32_t)(2022))
// Активная мощность
#define KEY_N_P ((uint32_t)(2023))
// Реактивная мощность
#define KEY_N_Q ((uint32_t)(2024))
// Полная мощность
#define KEY_N_S ((uint32_t)(2025))
// Состояние
#define KEY_N_STATE ((uint32_t)(2026))
// Норма
#define KEY_N_NORM ((uint32_t)(2027))
// Фазировка
#define KEY_N_PH ((uint32_t)(2028))
// Активная мощность нагрузки ВИП фазы А
#define KEY_N_P_A ((uint32_t)(2029))
// Активная мощность нагрузки ВИП фазы B
#define KEY_N_P_B ((uint32_t)(2030))
// Активная мощность нагрузки ВИП фазы C
#define KEY_N_P_C ((uint32_t)(2031))
// Мощность нагрузки фазы А от ВИП, ЭА, ГТА
#define KEY_N_P_AA ((uint32_t)(2032))
// Мощность нагрузки фазы B от ВИП, ЭА, ГТА
#define KEY_N_P_BB ((uint32_t)(2033))
// Мощность нагрузки фазы C от ВИП, ЭА, ГТА
#define KEY_N_P_CC ((uint32_t)(2034))
// Полная мощность сети
#define KEY_N_P_FULL ((uint32_t)(2035))
// Угол U фазы AB
#define KEY_N_PHI_U_AB ((uint32_t)(2036))
// Угол U фазы BC
#define KEY_N_PHI_U_BC ((uint32_t)(2037))
// Угол U фазы AC
#define KEY_N_PHI_U_AC ((uint32_t)(2038))
// Коэфф мощности для вывода на ПУ
#define KEY_N_PHI_COS ((uint32_t)(2039))
// Автомат ввода сети
#define KEY_N_AUT ((uint32_t)(2040))
// Контактор ввода сети
#define KEY_N_CONT ((uint32_t)(2041))
// Контактор ввода сети
#define KEY_CONT_NET ((uint32_t)(2050))
// Автомат ввода сети
#define KEY_AUT_NET ((uint32_t)(2051))
// U фазы A2
#define KEY_N_U_A2 ((uint32_t)(2300))
// F U фазы A2
#define KEY_N_F_U_A2 ((uint32_t)(2301))
// Угол U фазы A2
#define KEY_N_PHI_U_A2 ((uint32_t)(2302))
// F U фазы А с модуля синхронизации
#define KEY_N_F_U_A_transition ((uint32_t)(2303))
// Напряжение сети выше нормы
#define KEY_EA200 ((uint32_t)(2304))
// Напряжение сети ниже нормы
#define KEY_EA201 ((uint32_t)(2305))
// Неверная фазировка, обрыв фаз
#define KEY_EA202 ((uint32_t)(2306))
// Обрыв фаз
#define KEY_EA203 ((uint32_t)(2307))
// Отключен автомат защиты сети
#define KEY_EP205 ((uint32_t)(2308))
// Неисправность контактора сети
#define KEY_EA206 ((uint32_t)(2309))
// Частота ВИП ниже нормы
#define KEY_EA207 ((uint32_t)(2310))
// Частота выше нормы
#define KEY_EA208 ((uint32_t)(2311))
// КЗ сети
#define KEY_EA219 ((uint32_t)(2312))
// Нештатное отключение сети
#define KEY_EA224 ((uint32_t)(2313))
// Перегруз сети по мощности
#define KEY_EP225 ((uint32_t)(2314))
// Контроль состояния автомата сети
#define KEY_LIM_N_QF ((uint32_t)(2315))
// Контроль включения контактора сети
#define KEY_LIM_WAIT_KN_ON ((uint32_t)(2316))
// Контроль отключения контактора сети
#define KEY_LIM_WAIT_KN_OFF ((uint32_t)(2317))
// U фазы A выше нормы
#define KEY_LIM_N_U_A_HIGH_400 ((uint32_t)(2318))
// U фазы A ниже нормы
#define KEY_LIM_N_U_A_LOW_400 ((uint32_t)(2319))
// U фазы B выше нормы
#define KEY_LIM_N_U_B_HIGH_400 ((uint32_t)(2320))
// U фазы B ниже нормы
#define KEY_LIM_N_U_B_LOW_400 ((uint32_t)(2321))
// U фазы C выше нормы
#define KEY_LIM_N_U_C_HIGH_400 ((uint32_t)(2322))
// U фазы C ниже нормы
#define KEY_LIM_N_U_C_LOW_400 ((uint32_t)(2323))
// Частота фазы A выше нормы
#define KEY_LIM_N_FA_HIGH_400 ((uint32_t)(2324))
// Частота фазы B выше нормы
#define KEY_LIM_N_FB_HIGH_400 ((uint32_t)(2325))
// Частота фазы C выше нормы
#define KEY_LIM_N_FC_HIGH_400 ((uint32_t)(2326))
// Частота фазы A ниже нормы
#define KEY_LIM_N_FA_LOW_400 ((uint32_t)(2327))
// Частота фазы B ниже нормы
#define KEY_LIM_N_FB_LOW_400 ((uint32_t)(2328))
// Частота ниже фазы C нормы
#define KEY_LIM_N_FC_LOW_400 ((uint32_t)(2329))
// Неверная фазировка/обрыв
#define KEY_LIM_WRONG_PHASING_400 ((uint32_t)(2330))
// Обрыв одной из фаз
#define KEY_LIM_BREAK_WIRE_400 ((uint32_t)(2331))
// Нештатное отключение сети
#define KEY_LIM_N_EMCY ((uint32_t)(2332))
// Контроль обрыва датчика температуры ох.ж.
#define KEY_LIM_BREAK_TEMP_SENSOR ((uint32_t)(2333))
// Контроль обрыва датчика давления масла
#define KEY_LIM_BREAK_PRESSURE_SENSOR ((uint32_t)(2334))
// КЗ сети в фазе A
#define KEY_LIM_N_I_A_SHORT ((uint32_t)(2335))
// КЗ сети в фазе B
#define KEY_LIM_N_I_B_SHORT ((uint32_t)(2336))
// КЗ сети в фазе C
#define KEY_LIM_N_I_C_SHORT ((uint32_t)(2337))
// Перегруз сети по мощности
#define KEY_LIM_P_N ((uint32_t)(2338))

// Агрегат EA

// U фазы A
#define KEY_EA_U_A ((uint32_t)(5001))
// U фазы B
#define KEY_EA_U_B ((uint32_t)(5002))
// U фазы C
#define KEY_EA_U_C ((uint32_t)(5003))
// U линейное AB
#define KEY_EA_U_AB ((uint32_t)(5004))
// U линейное BC
#define KEY_EA_U_BC ((uint32_t)(5005))
// U линейное AC
#define KEY_EA_U_AC ((uint32_t)(5006))
// F U фазы A
#define KEY_EA_F_U_A ((uint32_t)(5007))
// F U фазы B
#define KEY_EA_F_U_B ((uint32_t)(5008))
// F U фазы C
#define KEY_EA_F_U_C ((uint32_t)(5009))
// Угол U фазы A
#define KEY_EA_PHI_U_A ((uint32_t)(5010))
// Угол U фазы B
#define KEY_EA_PHI_U_B ((uint32_t)(5011))
// Угол U фазы C
#define KEY_EA_PHI_U_C ((uint32_t)(5012))
// I фазы А
#define KEY_EA_I_A ((uint32_t)(5013))
// I фазы B
#define KEY_EA_I_B ((uint32_t)(5014))
// I фазы C
#define KEY_EA_I_C ((uint32_t)(5015))
// F I фазы А
#define KEY_EA_F_I_A ((uint32_t)(5016))
// F I фазы B
#define KEY_EA_F_I_B ((uint32_t)(5017))
// F I фазы C
#define KEY_EA_F_I_C ((uint32_t)(5018))
// Угол I фазы А
#define KEY_EA_PHI_I_A ((uint32_t)(5019))
// Угол I фазы B
#define KEY_EA_PHI_I_B ((uint32_t)(5020))
// Угол I фазы C
#define KEY_EA_PHI_I_C ((uint32_t)(5021))
// Косинус
#define KEY_EA_COS_PHI ((uint32_t)(5022))
// Активная мощность
#define KEY_EA_P ((uint32_t)(5023))
// Реактивная мощность
#define KEY_EA_Q ((uint32_t)(5024))
// Полная мощность
#define KEY_EA_S ((uint32_t)(5025))
// Состояние ЭА
#define KEY_EA_STATE ((uint32_t)(5026))
// Норма
#define KEY_EA_NORM ((uint32_t)(5027))
// t охлаждающей жидкости
#define KEY_EA_t_COOL ((uint32_t)(5029))
// P масла
#define KEY_EA_P_OIL ((uint32_t)(5030))
// t масла
#define KEY_EA_t_OIL ((uint32_t)(5031))
// Наработка ЭА
#define KEY_EA_MOTOHOURS ((uint32_t)(5032))
// Скорость схождения фаз 
#define KEY_SPEED_PHASE ((uint32_t)(5300))
// Норма давления масла
#define KEY_EA_P_NORM ((uint32_t)(5034))
// Норма уровня ОЖ
#define KEY_EA_NORM_LEVEL ((uint32_t)(5035))
// Активная мощность нагрузки ЭА фазы А
#define KEY_EA_P_A ((uint32_t)(5036))
// Активная мощность нагрузки ЭА фазы B
#define KEY_EA_P_B ((uint32_t)(5037))
// Активная мощность нагрузки ЭА фазы C
#define KEY_EA_P_C ((uint32_t)(5038))
// Обрыв датчика давления масла
#define KEY_EA_P_OIL_CALC ((uint32_t)(5039))
// Полная мощность ЭА
#define KEY_EA_P_FULL ((uint32_t)(5040))
// Контактор ЭА
#define KEY_EA_CONT ((uint32_t)(5041))
// Наличие ОЖ
#define KEY_EA_COOL_NORM ((uint32_t)(5043))
// Воздушный фильтр
#define KEY_EA_FILTER_NORM ((uint32_t)(5044))
// Автомат подзаряда МКИ
#define KEY_EA_MKE ((uint32_t)(5045))
// Авария от БРЗУ
#define KEY_EA_BRZU_ALARM ((uint32_t)(5046))
// Угол U фазы AB
#define KEY_EA_PHI_U_AB ((uint32_t)(5047))
// Угол U фазы BC
#define KEY_EA_PHI_U_BC ((uint32_t)(5048))
// Угол U фазы AC
#define KEY_EA_PHI_U_AC ((uint32_t)(5049))
// Контактор ЭА
#define KEY_CONT_EA ((uint32_t)(5051))
// Стартер
#define KEY_STARTER_EA ((uint32_t)(5052))
// Свечи
#define KEY_GLOWPLUG_EA ((uint32_t)(5053))
// Захлопка
#define KEY_ASU_EA ((uint32_t)(5054))
// Поле генератора
#define KEY_FIELD_EA ((uint32_t)(5055))
// U фазы A2
#define KEY_EA_U_A2 ((uint32_t)(5301))
// F U фазы A2
#define KEY_EA_F_U_A2 ((uint32_t)(5302))
// Угол U фазы A2
#define KEY_EA_PHI_U_A2 ((uint32_t)(5303))
// Статус 10% перегруз дизеля_1
#define KEY_EA_OVER10_STATUS ((uint32_t)(5304))
// Наработка ЭА при перегрузе в пределах 10%
#define KEY_EA_MOTOHOURS10 ((uint32_t)(5305))
// Время, оставшееся до тех обслуживания ЭА
#define KEY_EA_MOTOHOURS_LEFT ((uint32_t)(5306))
// F U фазы А с модуля синхронизации
#define KEY_EA_F_U_A_transition ((uint32_t)(5307))
// Незавершенный пуск
#define KEY_EA000 ((uint32_t)(5308))
// Низкое давление масла
#define KEY_EA001 ((uint32_t)(5309))
// Перегрев охлаждающей жидкости
#define KEY_EA002 ((uint32_t)(5310))
// Низкий уровень ОЖ
#define KEY_EA003 ((uint32_t)(5311))
// Незавершенный останов
#define KEY_EA005 ((uint32_t)(5312))
// Обрыв датчика температуры ОЖ
#define KEY_EA007 ((uint32_t)(5313))
// Обрыв датчика давления
#define KEY_EA008 ((uint32_t)(5314))
// Частота выше нормы
#define KEY_EA009 ((uint32_t)(5315))
// Частота ниже нормы
#define KEY_EA010 ((uint32_t)(5316))
// Разнос
#define KEY_EA012 ((uint32_t)(5317))
// Воздушный фильтр засорен
#define KEY_EP001 ((uint32_t)(5318))
// Температура ОЖ ниже нормы
#define KEY_EP003 ((uint32_t)(5319))
// Неудавшийся прогрев
#define KEY_EP004 ((uint32_t)(5320))
// Неудавшаяся подстройка частоты
#define KEY_EP005 ((uint32_t)(5321))
// Предупреждение о низком давлении масла
#define KEY_EP007 ((uint32_t)(5322))
// Требуется ТО
#define KEY_EP008 ((uint32_t)(5323))
// Отключен автомат подзаряда МКИ
#define KEY_EP336 ((uint32_t)(5324))
// Авария от БРЗУ
#define KEY_EP010 ((uint32_t)(5325))
// Напряжение выше нормы
#define KEY_EA100 ((uint32_t)(5326))
// Напряжение ниже нормы
#define KEY_EA101 ((uint32_t)(5327))
// Неисправность контактора генератора
#define KEY_EA102 ((uint32_t)(5328))
// Перегруз по току
#define KEY_EA103 ((uint32_t)(5329))
// КЗ генератора или нагрузки
#define KEY_EA106 ((uint32_t)(5330))
// Ошибка синхронизации
#define KEY_EA107 ((uint32_t)(5331))
// Пропало донесение от КГ во время работы
#define KEY_EA108 ((uint32_t)(5332))
// Перегруз по мощности
#define KEY_EP109 ((uint32_t)(5333))
// Низкое давление масла
#define KEY_LIM_EA_P_OIL_MIN ((uint32_t)(5334))
// Пониженное давление масла
#define KEY_LIM_EA_P_OIL_LOW ((uint32_t)(5335))
// Температура ОЖ выше нормы (перегрев ОЖ)
#define KEY_LIM_EA_T_COOL_HIGH ((uint32_t)(5336))
// Температура ОЖ ниже нормы
#define KEY_LIM_T_LIQ_HIGH_400 ((uint32_t)(5337))
// U фазы A выше нормы
#define KEY_LIM_EA_U_A_HIGH_400 ((uint32_t)(5338))
// U фазы B выше нормы
#define KEY_LIM_EA_U_B_HIGH_400 ((uint32_t)(5339))
// U фазы C выше нормы
#define KEY_LIM_EA_U_C_HIGH_400 ((uint32_t)(5340))
// U фазы A ниже нормы
#define KEY_LIM_EA_U_A_LOW_400 ((uint32_t)(5341))
// U фазы B ниже нормы
#define KEY_LIM_EA_U_B_LOW_400 ((uint32_t)(5342))
// U фазы C ниже нормы
#define KEY_LIM_EA_U_C_LOW_400 ((uint32_t)(5343))
// Частота фазы A выше нормы
#define KEY_LIM_EA_FA_HIGH_400 ((uint32_t)(5344))
// Частота фазы B выше нормы
#define KEY_LIM_EA_FB_HIGH_400 ((uint32_t)(5345))
// Частота выше фазы C нормы
#define KEY_LIM_EA_FC_HIGH_400 ((uint32_t)(5346))
// Частота фазы A ниже нормы
#define KEY_LIM_EA_FA_LOW_400 ((uint32_t)(5347))
// Частота фазы B ниже нормы
#define KEY_LIM_EA_FB_LOW_400 ((uint32_t)(5348))
// Частота фазы c ниже нормы
#define KEY_LIM_EA_FC_LOW_400 ((uint32_t)(5349))
// Разнос
#define KEY_LIM_EA_F_BREAK_400 ((uint32_t)(5350))
// Перегруз 50 % по току фазы А
#define KEY_LIM_EA_I_A_150_400 ((uint32_t)(5351))
// Перегруз 50 % по току фазы B
#define KEY_LIM_EA_I_B_150_400 ((uint32_t)(5352))
// Перегруз 50 % по току фазы C
#define KEY_LIM_EA_I_C_150_400 ((uint32_t)(5353))
// КЗ в фазе A
#define KEY_LIM_EA_I_A_SHORT_400 ((uint32_t)(5354))
// КЗ в фазе B
#define KEY_LIM_EA_I_B_SHORT_400 ((uint32_t)(5355))
// КЗ в фазе C
#define KEY_LIM_EA_I_C_SHORT_400 ((uint32_t)(5356))
// Работа с перегрузом по току фазы А
#define KEY_LIM_EA_I_A_OVER_400 ((uint32_t)(5357))
// Работа с перегрузом по току фазы B
#define KEY_LIM_EA_I_B_OVER_400 ((uint32_t)(5358))
// Работа с перегрузом по току фазы C
#define KEY_LIM_EA_I_C_OVER_400 ((uint32_t)(5359))
// Не норма ур. ОЖ
#define KEY_LIM_EA_LEVEL ((uint32_t)(5360))
// Аварийный стоп
#define KEY_LIM_ALARM ((uint32_t)(5361))
// Засоренность воздушного фильтра
#define KEY_LIM_FILTER ((uint32_t)(5362))
// Низкий уровень топлива в баке ПЖД
#define KEY_LIM_LOW_FUEL ((uint32_t)(5363))
// Перегруз по мощности ЭА
#define KEY_LIM_P_EA ((uint32_t)(5364))
// Авария при включении контактора ЭлектроАгрегата. Неисправность контактора
#define KEY_LIM_WAIT_KEA_OFF ((uint32_t)(5365))
// Авария при отключении контактора ЭлектроАгрегата. Неисправность контактора
#define KEY_LIM_WAIT_KEA_ON ((uint32_t)(5366))
// Отключен автомат подзараяда МКЭ
#define KEY_LIM_EA_MKE ((uint32_t)(5367))
// Авария от БРЗУ
#define KEY_LIM_EA_BRZU_ALARM ((uint32_t)(5368))

// Агрегат GTA

// U фазы A
#define KEY_GTA_U_A ((uint32_t)(8001))
// U фазы B
#define KEY_GTA_U_B ((uint32_t)(8002))
// U фазы C
#define KEY_GTA_U_C ((uint32_t)(8003))
// U линейное AB
#define KEY_GTA_U_AB ((uint32_t)(8004))
// U линейное BC
#define KEY_GTA_U_BC ((uint32_t)(8005))
// U линейное AC
#define KEY_GTA_U_AC ((uint32_t)(8006))
// F U фазы A
#define KEY_GTA_F_U_A ((uint32_t)(8007))
// F U фазы B
#define KEY_GTA_F_U_B ((uint32_t)(8008))
// F U фазы C
#define KEY_GTA_F_U_C ((uint32_t)(8009))
// Угол U фазы A
#define KEY_GTA_PHI_U_A ((uint32_t)(8010))
// Угол U фазы B
#define KEY_GTA_PHI_U_B ((uint32_t)(8011))
// Угол U фазы C
#define KEY_GTA_PHI_U_C ((uint32_t)(8012))
// I фазы А
#define KEY_GTA_I_A ((uint32_t)(8013))
// I фазы B
#define KEY_GTA_I_B ((uint32_t)(8014))
// I фазы C
#define KEY_GTA_I_C ((uint32_t)(8015))
// F I фазы А
#define KEY_GTA_F_I_A ((uint32_t)(8016))
// F I фазы B
#define KEY_GTA_F_I_B ((uint32_t)(8017))
// F I фазы C
#define KEY_GTA_F_I_C ((uint32_t)(8018))
// Угол I фазы А
#define KEY_GTA_PHI_I_A ((uint32_t)(8019))
// Угол I фазы B
#define KEY_GTA_PHI_I_B ((uint32_t)(8020))
// Угол I фазы C
#define KEY_GTA_PHI_I_C ((uint32_t)(8021))
// Косинус
#define KEY_GTA_COS_PHI ((uint32_t)(8022))
// Активная мощность
#define KEY_GTA_P ((uint32_t)(8023))
// Реактивная мощность
#define KEY_GTA_Q ((uint32_t)(8024))
// Полная мощность
#define KEY_GTA_S ((uint32_t)(8025))
// Состояние ГТА
#define KEY_GTA_STATE ((uint32_t)(8026))
// Норма
#define KEY_GTA_NORM ((uint32_t)(8027))
// Наработка ГТА
#define KEY_GTA_MOTOHOURS ((uint32_t)(8032))
// Активная мощность нагрузки ГТА фазы А
#define KEY_GTA_P_A ((uint32_t)(8033))
// Активная мощность нагрузки ГТА фазы B
#define KEY_GTA_P_B ((uint32_t)(8034))
// Активная мощность нагрузки ГТА фазы C
#define KEY_GTA_P_C ((uint32_t)(8035))
// Полная мощность ГТА
#define KEY_GTA_P_FULL ((uint32_t)(8036))
// Обрыв одной фазы
#define KEY_N_PH_PHASE ((uint32_t)(8037))
// Наработка ГТА при 10% перегрузке
#define KEY_GTA_MOTOHOURS10 ((uint32_t)(8038))
// Время, оставшееся до тех обслуживания ГТА
#define KEY_GTA_MOTOHOURS_LEFT ((uint32_t)(8039))
// Контактор ГТА
#define KEY_GTA_CONT ((uint32_t)(8041))
// Угол U фазы AB
#define KEY_GTA_PHI_U_AB ((uint32_t)(8042))
// Угол U фазы BC
#define KEY_GTA_PHI_U_BC ((uint32_t)(8043))
// Угол U фазы AC
#define KEY_GTA_PHI_U_AC ((uint32_t)(8044))
// Контактор ГТА
#define KEY_CONT_GTA ((uint32_t)(8051))
// U фазы A2
#define KEY_GTA_U_A2 ((uint32_t)(8300))
// F U фазы A2
#define KEY_GTA_F_U_A2 ((uint32_t)(8301))
// Угол U фазы A2
#define KEY_GTA_PHI_U_A2 ((uint32_t)(8302))
// Время, оставшееся до тех обслуживания ГТА
#define KEY_GTA_SA_TIME_LEFT ((uint32_t)(8303))
// F U фазы А с модуля синхронизации
#define KEY_GTA_F_U_A_transition ((uint32_t)(8304))
// Напряжение ГТА выше нормы
#define KEY_EA500 ((uint32_t)(8305))
// Напряжение ГТА ниже нормы
#define KEY_EA501 ((uint32_t)(8306))
// Неисправность контактора ГТА
#define KEY_EA506 ((uint32_t)(8307))
// КЗ ГТА
#define KEY_EA519 ((uint32_t)(8308))
// Частота выше нормы
#define KEY_EA508 ((uint32_t)(8309))
// Частота ниже нормы
#define KEY_EA507 ((uint32_t)(8310))
// Перегруз ГТА по мощности
#define KEY_EP525 ((uint32_t)(8311))
// U фазы A выше нормы
#define KEY_LIM_GTA_U_A_HIGH ((uint32_t)(8312))
// U фазы A ниже нормы
#define KEY_LIM_GTA_U_A_LOW ((uint32_t)(8313))
// U фазы B выше нормы
#define KEY_LIM_GTA_U_B_HIGH ((uint32_t)(8314))
// U фазы B ниже нормы
#define KEY_LIM_GTA_U_B_LOW ((uint32_t)(8315))
// U фазы C выше нормы
#define KEY_LIM_GTA_U_C_HIGH ((uint32_t)(8316))
// U фазы C ниже нормы
#define KEY_LIM_GTA_U_C_LOW ((uint32_t)(8317))
// Частота фазы A выше нормы
#define KEY_LIM_GTA_FA_HIGH ((uint32_t)(8318))
// Частота фазы B выше нормы
#define KEY_LIM_GTA_FB_HIGH ((uint32_t)(8319))
// Частота фазы C выше нормы
#define KEY_LIM_GTA_FC_HIGH ((uint32_t)(8320))
// Частота фазы A ниже нормы
#define KEY_LIM_GTA_FA_LOW ((uint32_t)(8321))
// Частота фазы B ниже нормы
#define KEY_LIM_GTA_FB_LOW ((uint32_t)(8322))
// Частота фазы C ниже нормы
#define KEY_LIM_GTA_FC_LOW ((uint32_t)(8323))
// Контроль включения контактора ГТА
#define KEY_LIM_WAIT_KGTA_ON ((uint32_t)(8324))
// Контроль отключения контактора ГТА
#define KEY_LIM_WAIT_KGTA_OFF ((uint32_t)(8325))
// КЗ сети ГТА в фазе A
#define KEY_LIM_GTA_I_A_SHORT ((uint32_t)(8326))
// КЗ сети ГТА в фазе B
#define KEY_LIM_GTA_I_B_SHORT ((uint32_t)(8327))
// КЗ сети ГТА в фазе C
#define KEY_LIM_GTA_I_C_SHORT ((uint32_t)(8328))
// Перегруз ГТА по мощности
#define KEY_LIM_P_GTA ((uint32_t)(8329))
// Работа с перегрузом по току фазы А
#define KEY_LIM_GTA_I_A_OVER ((uint32_t)(8330))
// Работа с перегрузом по току фазы B
#define KEY_LIM_GTA_I_B_OVER ((uint32_t)(8331))
// Работа с перегрузом по току фазы C
#define KEY_LIM_GTA_I_C_OVER ((uint32_t)(8332))

// Агрегат EN

// I фазы A
#define KEY_EN_I_A ((uint32_t)(9013))
// I фазы B
#define KEY_EN_I_B ((uint32_t)(9014))
// I фазы C
#define KEY_EN_I_C ((uint32_t)(9015))
// Состояние
#define KEY_EN_STATE ((uint32_t)(9016))
// Автомат ЭН
#define KEY_EN_AUT ((uint32_t)(9040))
// Контактор ЭН
#define KEY_EN_CONT ((uint32_t)(9041))
// Контактор ЭН
#define KEY_CONT_EN ((uint32_t)(9051))
// Неисправность контактора ЭН
#define KEY_EA305 ((uint32_t)(9300))
// Неисправность ЭН
#define KEY_EA306 ((uint32_t)(9301))
// КЗ в цепи ЭН
#define KEY_EA322 ((uint32_t)(9302))
// Отключен автомат ЭН
#define KEY_EP324 ((uint32_t)(9303))
// Контроль включения контактора ЭН
#define KEY_LIM_WAIT_KEN_ON ((uint32_t)(9304))
// Контроль отключения контактора ЭН
#define KEY_LIM_WAIT_KEN_OFF ((uint32_t)(9305))
// КЗ фазы A ЭН
#define KEY_LIM_EN_I_A_SHORT_400 ((uint32_t)(9306))
// КЗ фазы B ЭН
#define KEY_LIM_EN_I_B_SHORT_400 ((uint32_t)(9307))
// КЗ фазы C ЭН
#define KEY_LIM_EN_I_C_SHORT_400 ((uint32_t)(9308))
// Обрыв фазы A ЭН
#define KEY_LIM_EN_I_A_BREAK_400 ((uint32_t)(9309))
// Обрыв фазы B ЭН
#define KEY_LIM_EN_I_B_BREAK_400 ((uint32_t)(9310))
// Обрыв фазы C ЭН
#define KEY_LIM_EN_I_C_BREAK_400 ((uint32_t)(9311))
// Контроль состояния автомата ЭН
#define KEY_LIM_EN_QF ((uint32_t)(9312))

// Агрегат BU

// Метка времени
#define KEY_TIME_STAMP ((uint32_t)(12001))
// Приказ оператора
#define KEY_OPERATOR_COMMAND ((uint32_t)(12011))
// Адрес уставок в ОЗУ
#define KEY_ADDR_PRESET_RAM ((uint32_t)(12021))
// Адрес уставок в ПЗУ
#define KEY_ADDR_PRESET_ROM ((uint32_t)(12031))
// Адрес калибровок в ОЗУ
#define KEY_ADDR_CALIBR_RAM ((uint32_t)(12041))
// Адрес калибровок в ПЗУ
#define KEY_ADDR_CALIBR_ROM ((uint32_t)(12051))
// Адрес наработки
#define KEY_ADDR_MOTOHOURS ((uint32_t)(12061))
// Пониженное давление масла
#define KEY_EA_P_OIL_NEW ((uint32_t)(12062))
// Блокировка защит
#define KEY_PROTECTION_BLOCK ((uint32_t)(12300))
// Состояния агрегатов
#define KEY_STATES_UNITS ((uint32_t)(12301))
// Аварии сети и БУ ЭА
#define KEY_EVENTS_NET_BU_EA ((uint32_t)(12302))
// Аварии ЭА
#define KEY_EVENTS_EA ((uint32_t)(12303))
// Команды БУ ЭА
#define KEY_COMMANDS_BU_EA ((uint32_t)(12304))
// Донесения БК220 и УР27
#define KEY_DISCRETES_BK220_UR27 ((uint32_t)(12305))
// Состояния люков
#define KEY_HATCHES_STATES ((uint32_t)(12306))
// Состояние люка забора ЭА
#define KEY_HATCH_IN_STATE ((uint32_t)(12307))
// Состояние люка выброса ЭА
#define KEY_HATCH_OUT_STATE ((uint32_t)(12308))
// Индикация напряжения СИПТ с УКПТ
#define KEY_U_OP_LED ((uint32_t)(12309))
// Индикация светодиодов 220В
#define KEY_U_220_LED ((uint32_t)(12310))
// Отказ люка забора
#define KEY_HATCH_IN_BREAK ((uint32_t)(12311))
// Отказ люка выброса
#define KEY_HATCH_OUT_BREAK ((uint32_t)(12312))
// Наработка станции в часах
#define KEY_STATION_HOURS ((uint32_t)(12313))
// Наработка ЭА в часах
#define KEY_EA_HOURS ((uint32_t)(12314))
// Наработка ГТА в часах
#define KEY_GTA_HOURS ((uint32_t)(12315))
// Отсутствует синхронизация
#define KEY_EA_SINHR ((uint32_t)(12316))
// Аварийный стоп
#define KEY_EA300 ((uint32_t)(12317))
// Низкое напряжение АКБ
#define KEY_EA323 ((uint32_t)(12318))
// КЗ на общей шине
#define KEY_EA308 ((uint32_t)(12319))
// Нет исходного положения выключателей на УР27
#define KEY_EA433 ((uint32_t)(12320))
// Нет исходного положения выключателей на БК220
#define KEY_EA434 ((uint32_t)(12321))
// КЗ в цепи стартера
#define KEY_EA310 ((uint32_t)(12322))
// Обрыв стартера
#define KEY_EA311 ((uint32_t)(12323))
// Отусутствует синхронизация
#define KEY_EP312 ((uint32_t)(12324))
// Отказ люка забора ЭА
#define KEY_EA340 ((uint32_t)(12325))
// Отказ люка выброса ЭА
#define KEY_EA341 ((uint32_t)(12326))
// Низкий уровень топлива
#define KEY_EP002 ((uint32_t)(12327))
// Липовая авария
#define KEY_EA999 ((uint32_t)(12328))
// Низкое напряжение АКБ
#define KEY_LIM_EA_AKB ((uint32_t)(12329))
// Контроль отказа люка забора
#define KEY_LIM_HATCH_IN_BREAK ((uint32_t)(12330))
// Контроль отказа люка выброса
#define KEY_LIM_HATCH_OUT_BREAK ((uint32_t)(12331))
// Отсутствует синхронизация
#define KEY_LIM_EA_SINHR ((uint32_t)(12332))

// Агрегат PRU

// Топливный клапан
#define KEY_FUEL ((uint32_t)(15300))

// Агрегат BK220

// Отключен автомат фидера
#define KEY_EA325 ((uint32_t)(20300))
// Автомат фидера
#define KEY_FID400_AUT ((uint32_t)(20301))
// Автомат СИПТ1
#define KEY_SIPT_AUT ((uint32_t)(20302))
// Автомат СИПТ2
#define KEY_SIPT2_AUT ((uint32_t)(20303))
// Автомат фидера
#define KEY_AUT_FID ((uint32_t)(20304))
// Отключен автомат фидера
#define KEY_EP325 ((uint32_t)(20305))
// Контроль состояния автомата фидера
#define KEY_LIM_FID_QF ((uint32_t)(20306))

// Агрегат UR27

// U 27 В
#define KEY_U_27_V ((uint32_t)(21300))
// Режим работы люков
#define KEY_H_MODE ((uint32_t)(21301))
// Люк забора ЭА открыт
#define KEY_O_H_IN ((uint32_t)(21302))
// Люк забора ЭА в среднем положении
#define KEY_M_H_IN ((uint32_t)(21303))
// Люк забора ЭА закрыт
#define KEY_C_H_IN ((uint32_t)(21304))
// Люк выброса ЭА открыт
#define KEY_O_H_OUT ((uint32_t)(21305))
// Люк выброса ЭА в среднем положении
#define KEY_M_H_OUT ((uint32_t)(21306))
// Люк выброса ЭА закрыт
#define KEY_C_H_OUT ((uint32_t)(21307))
// Нижний уровень топлива
#define KEY_LOW_FUEL ((uint32_t)(21308))
// Аварийный стоп
#define KEY_ALARM_STOP ((uint32_t)(21309))
// Открыть люк забора ЭА
#define KEY_HATCH_IN_O ((uint32_t)(21310))
// Закрыть люк забора ЭА
#define KEY_HATCH_IN_C ((uint32_t)(21311))
// Открыть люк выброса ЭА
#define KEY_HATCH_OUT_O ((uint32_t)(21312))
// Закрыть люк выброса ЭА
#define KEY_HATCH_OUT_C ((uint32_t)(21313))

// Агрегат RS485_CAN


// Устройство UKPT

// I шунта
#define KEY_I_SH ((uint32_t)(1000000))
// U ОП
#define KEY_U_OP ((uint32_t)(1000001))
// P СИПТ
#define KEY_P_SIPT ((uint32_t)(1000002))
// U СИПТ
#define KEY_U_SIPT ((uint32_t)(1000003))
// Перегруз СИПТ
#define KEY_EP338 ((uint32_t)(1000004))
// КЗ СИПТ
#define KEY_EA339 ((uint32_t)(1000005))
// Отключен автомат СИПТ2
#define KEY_EP344 ((uint32_t)(1000006))
// Перегруз по току 20 % СИПТ
#define KEY_LIM_EA_I_SIPT ((uint32_t)(1000007))
// КЗ СИПТ
#define KEY_LIM_EA_SHORT_SIPT ((uint32_t)(1000008))
// Контроль состояния автомата СИПТ2
#define KEY_LIM_SIPT2_QF ((uint32_t)(1000009))

// Устройство RPMC

// Обороты ЭА
#define KEY_EA_RPM ((uint32_t)(2000000))

#endif

